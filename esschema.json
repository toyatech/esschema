{
  "$schema": "http://json-schema.org/schema#",
  "definitions": {
    "Node": {
      "type": "object",
      "properties": {
        "type": { "type": "string" },
        "loc": {
          "oneOf": [
            { "$ref": "#/definitions/SourceLocation" },
            { "type": "null" }
          ]
        }
      },
      "required": [ "type" ]
    },
    "SourceLocation": {
      "type": "object",
      "properties": {
        "source": {
          "oneOf": [
            { "type": "string" },
            { "type": "null" }
          ]
        },
        "start": {
          "allOf": [
            { "$ref": "#/definitions/Position" }
          ]
        },
        "end": {
          "allOf": [
            { "$ref": "#/definitions/Position" }
          ]
        }
      },
      "required": [ "start", "end" ]
    },
    "Position": {
      "type": "object",
      "properties": {
        "line": { "type": "integer", "minimum": 1 },
        "column": { "type": "integer", "minimum": 0 }
      },
      "required": [ "line", "column" ]
    },
    "Program": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Node" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^Program$" },
        "body": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Statement"
          }
        }
      },
      "required": [ "body" ]
    },
    "Function": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Node" }
      ],
      "properties": {
        "id": {
          "oneOf": [
            { "$ref": "#/definitions/Identifier" },
            { "type": "null" }
          ]
        },
        "params": {
          "type": "array",
          "items": { "$ref": "#/definitions/Pattern" }
        },
        "defaults": {
          "type": "array",
          "items": { "$ref": "#/definitions/Expression" }
        },
        "rest": {
          "oneOf": [
            { "$ref": "#/definitions/Identifier" },
            { "type": "null" }
          ]
        },
        "body": {
          "oneOf": [
            { "$ref": "#/definitions/BlockStatement" },
            { "$ref": "#/definitions/Expression" }
          ]
        },
        "generator": {
          "type": "boolean"
        },
        "expression": {
          "type": "boolean"
        }
      },
      "required": [ 
        "id", "params", "defaults", "rest", "body", "generator", "expression" 
      ]
    },
    "_Statement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Node" }
      ]
    },
    "Statement": {
      "type": "object",
      "oneOf": [
        { "$ref": "#/definitions/EmptyStatement" },
        { "$ref": "#/definitions/BlockStatement" },
        { "$ref": "#/definitions/ExpressionStatement" },
        { "$ref": "#/definitions/IfStatement" },
        { "$ref": "#/definitions/LabeledStatement" },
        { "$ref": "#/definitions/BreakStatement" },
        { "$ref": "#/definitions/ContinueStatement" },
        { "$ref": "#/definitions/WithStatement" },
        { "$ref": "#/definitions/SwitchStatement" },
        { "$ref": "#/definitions/ReturnStatement" },
        { "$ref": "#/definitions/ThrowStatement" },
        { "$ref": "#/definitions/TryStatement" },
        { "$ref": "#/definitions/WhileStatement" },
        { "$ref": "#/definitions/DoWhileStatement" },
        { "$ref": "#/definitions/ForStatement" },
        { "$ref": "#/definitions/ForInStatement" },
        { "$ref": "#/definitions/DebuggerStatement" },
        { "$ref": "#/definitions/Declaration" }
      ]
    },
    "EmptyStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^EmptyStatement$" }
      },
      "required": [ "type" ]
    },
    "BlockStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^BlockStatement$" },
        "body": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Statement"
          }
        }
      },
      "required": [ "body" ]
    },
    "ExpressionStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^ExpressionStatement$" },
        "expression": {
          "$ref": "#/definitions/Expression"
        }
      },
      "required": [ "expression" ]
    },
    "IfStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^IfStatement$" },
        "test": { "$ref": "#/definitions/Expression" },
        "consequent": { "$ref": "#/definitions/Statement" },
        "alternate": {
          "oneOf": [
            { "$ref": "#/definitions/Statement" },
            { "type": "null" }
          ]
        }
      },
      "required": [ "test", "consequent", "alternate" ]
    },
    "LabeledStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^LabeledStatement$" },
        "label": { "$ref": "#/definitions/Identifier" },
        "body": { "$ref": "#/definitions/Statement" }
      },
      "required": [ "label", "body" ]
    },
    "BreakStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^BreakStatement$" },
        "label": {
          "oneOf": [
            { "$ref": "#/definitions/Identifier" },
            { "type": "null" }
          ]
        }
      },
      "required": [ "label" ]
    },
    "ContinueStatement": {
      "type": "object",
       "allOf": [
         { "$ref": "#/definitions/_Statement" }
       ],
       "properties": {
         "type": { "type": "string", "pattern": "^ContinueStatement$" },
         "label": {
          "oneOf": [
            { "$ref": "#/definitions/Identifier" },
            { "type": "null" }
          ]
        }
      },
      "required": [ "label" ]
    },
    "WithStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^WithStatement$" },
        "object": { "$ref": "#/definitions/Expression" },
        "body": { "$ref": "#/definitions/Statement" }
      },
      "required": [ "object", "body" ]
    },
    "SwitchStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^SwitchStatement$" },
        "discriminant": { "$ref": "#/definitions/Expression" },
        "cases": {
          "type": "array",
          "items": { "$ref": "#/definitions/SwitchCase" }
        },
        "lexical": { "type": "boolean" }
      },
      "required": [ "discriminant", "cases" ]
    },
    "ReturnStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^ReturnStatement$" },
        "argument": {
          "oneOf": [
            { "$ref": "#/definitions/Expression" },
            { "type": "null" }
          ]
        }
      },
      "required": [ "argument" ]
    },
    "ThrowStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^ThrowStatement$" },
        "argument": { "$ref": "#/definitions/Expression" }
      },
      "required": [ "argument" ]
    },
    "TryStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^TryStatement$" },
        "block": { "$ref": "#/definitions/BlockStatement" },
        "handler": {
          "oneOf": [
            { "$ref": "#/definitions/CatchClause" },
            { "type": "null" }
          ]
        },
        "guardedHandlers": {
          "type": "array",
          "items": { "$ref": "#/definitions/CatchClause" }
        },
        "finalizer": {
          "oneOf": [
            { "$ref": "#/definitions/BlockStatement" },
            { "type": "null" }
          ]
        }
      },
      "required": [ "block", "guardedHandlers", "finalizer" ]
    },
    "WhileStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^WhileStatement$" },
        "test": { "$ref": "#/definitions/Expression" },
        "body": { "$ref": "#/definitions/Statement" }
      },
      "required": [ "test", "body" ]
    },
    "DoWhileStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^DoWhileStatement$" },
        "body": { "$ref": "#/definitions/Statement" },
        "test": { "$ref": "#/definitions/Expression" }
      },
      "required": [ "body", "test" ]
    },
    "ForStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^ForStatement$" },
        "init": {
          "oneOf": [
            { "$ref": "#/definitions/VariableDeclaration" },
            { "$ref": "#/definitions/Expression" },
            { "type": "null" }
          ]
        },
        "test": {
          "oneOf": [
            { "$ref": "#/definitions/Expression" },
            { "type": "null" }
          ]
        },
        "update": {
          "oneOf": [
            { "$ref": "#/definitions/Expression" },
            { "type": "null" }
          ]
        },
        "body": { "$ref": "#/definitions/Statement" }
      },
      "required": [ "init", "test", "update", "body" ]
    },
    "ForInStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^ForInStatement$" },
        "left": {
          "oneOf": [
            { "$ref": "#/definitions/VariableDeclaration" },
            { "$ref": "#/definitions/Expression" }
          ]
        },
        "right": { "$ref": "#/definitions/Expression" },
        "body": { "$ref": "#/definitions/Statement" },
        "each": { "type": "boolean" }
      },
      "required": [ "left", "right", "body", "each" ]
    },
    "DebuggerStatement": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Statement" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^DebuggerStatement$" }
      }
    },
    "_Declaration": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Node" }
      ]
    },
    "Declaration": {
      "type": "object",
      "oneOf": [
        { "$ref": "#/definitions/FunctionDeclaration" },
        { "$ref": "#/definitions/VariableDeclaration" }
      ]
    },
    "FunctionDeclaration": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Function" },
        { "$ref": "#/definitions/_Declaration" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^FunctionDeclaration$" },
        "id": { "$ref": "#/definitions/Identifier" }
      },
      "required": [ "id" ]
    },
    "VariableDeclaration": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Declaration" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^VariableDeclaration$" },
        "declarations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariableDeclarator"
          }
        },
        "kind": {
          "enum": [ "var", "let", "const" ]
        }
      },
      "required": [ "declarations", "kind" ]
    },
    "VariableDeclarator": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Node" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^VariableDeclarator$" },
        "id": { "$ref": "#/definitions/Pattern" },
        "init": { 
          "oneOf": [
            { "$ref": "#/definitions/Expression" },
            { "type": "null" }
          ]
        }
      },
      "required": [ "id", "init" ]
    },
    "_Expression": {
      "allOf": [
        { "$ref": "#/definitions/Node" }
      ]
    },
    "Expression": {
      "type": "object",
      "oneOf": [
        { "$ref": "#/definitions/ThisExpression" },
        { "$ref": "#/definitions/ArrayExpression" },
        { "$ref": "#/definitions/ObjectExpression" },
        { "$ref": "#/definitions/FunctionExpression" },
        { "$ref": "#/definitions/SequenceExpression" },
        { "$ref": "#/definitions/UnaryExpression" },
        { "$ref": "#/definitions/BinaryExpression" },
        { "$ref": "#/definitions/AssignmentExpression" },
        { "$ref": "#/definitions/UpdateExpression" },
        { "$ref": "#/definitions/LogicalExpression" },
        { "$ref": "#/definitions/ConditionalExpression" },
        { "$ref": "#/definitions/NewExpression" },
        { "$ref": "#/definitions/CallExpression" },
        { "$ref": "#/definitions/MemberExpression" },
        { "$ref": "#/definitions/Identifier" },
        { "$ref": "#/definitions/Literal" }
      ]
    },
    "ThisExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^ThisExpression$" }
      }
    },
    "ArrayExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^ArrayExpression$" },
        "elements": {
          "type": "array",
          "items": {
            "oneOf": [
              { "$ref": "#/definitions/Expression" },
              { "type": "null" }
            ]
          }
        }
      },
      "required": [ "elements" ]
    },
    "ObjectExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^ObjectExpression$" },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        }
      },
      "required": [ "properties" ],
      "additionalItems": false
    },
    "FunctionExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Function" },
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^FunctionExpression$" }
      }
    },
    "SequenceExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^SequenceExpression$" },
        "expressions": {
          "type": "array",
          "items": { "$ref": "#/definitions/Expression" }
        }
      },
      "required": [ "expressions" ]
    },
    "UnaryExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^UnaryExpression$" },
        "operator": { "$ref": "#/definitions/UnaryOperator" },
        "prefix": { "type": "boolean" },
        "argument": { "$ref": "#/definitions/Expression" }
      },
      "required": [ "operator", "prefix", "argument" ]
    },
    "BinaryExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^BinaryExpression$" },
        "operator": {
          "$ref": "#/definitions/BinaryOperator"
        },
        "left": { "$ref": "#/definitions/Expression" },
        "right": { "$ref": "#/definitions/Expression" }
      },
      "required": [ "operator", "left", "right" ]
    },
    "AssignmentExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^AssignmentExpression$" },
        "operator": { "$ref": "#/definitions/AssignmentOperator" },
        "left": { "$ref": "#/definitions/Expression" },
        "right": { "$ref": "#/definitions/Expression" }
      },
      "required": [ "operator", "left", "right" ]
    },
    "UpdateExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^UpdateExpression$" },
        "operator": { "$ref": "#/definitions/UpdateOperator" },
        "argument": { "$ref": "#/definitions/Expression" },
        "prefix": { "type": "boolean" }
      },
      "required": [ "operator", "argument", "prefix" ]
    },
    "LogicalExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^LogicalExpression$" },
        "operator": { "$ref": "#/definitions/LogicalOperator" },
        "left": { "$ref": "#/definitions/Expression" },
        "right": { "$ref": "#/definitions/Expression" }
      },
      "required": [ "operator", "left", "right" ]
    },
    "ConditionalExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^ConditionalExpression$" },
        "test": { "$ref": "#/definitions/Expression" },
        "alternate": { "$ref": "#/definitions/Expression" },
        "consequent": { "$ref": "#/definitions/Expression" }
      },
      "required": [ "test", "alternate", "consequent" ]
    },
    "NewExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^NewExpression$" },
        "callee": { "$ref": "#/definitions/Expression" },
        "arguments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Expression" }
        }
      },
      "required": [ "callee", "arguments" ]
    },
    "CallExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^CallExpression$" },
        "callee": { "$ref": "#/definitions/Expression" },
        "arguments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Expression" }
        }
      },
      "required": [ "callee", "arguments" ]
    },
    "MemberExpression": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^MemberExpression$" },
        "object": { "$ref": "#/definitions/Expression" },
        "property": { "$ref": "#/definitions/Expression" },
        "computed": { "type": "boolean" }
      },
      "required": [ "object", "property", "computed" ]
    },
    "_Pattern": {
      "allOf": [
        { "$ref": "#/definitions/Node" }
      ]
    },
    "Pattern": {
      "type": "object",
      "oneOf": [
        { "$ref": "#/definitions/Identifier" }
      ]
    },
    "SwitchCase": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Node" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^SwitchCase$" },
        "test": {
          "oneOf": [
            { "$ref": "#/definitions/Expression" },
            { "type": "null" }
          ]
        }
      },
      "required": [ "test" ]
    },
    "Identifier": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Node" },
        { "$ref": "#/definitions/_Expression" },
        { "$ref": "#/definitions/_Pattern" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^Identifier$" },
        "name": { "type": "string" }
      },
      "required": [ "name" ]
    },
    "Literal": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Node" },
        { "$ref": "#/definitions/_Expression" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^Literal$" },
        "value": {
          "oneOf": [
            { "type": "string" },
            { "type": "boolean" },
            { "type": "null" },
            { "type": "number" }
          ]
        },
        "raw": {
          "type": "string"
        }
      },
      "required": [ "value" ]
    },
    "Property": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/Node" }
      ],
      "properties": {
        "type": { "type": "string", "pattern": "^Property$" },
        "key": {
          "oneOf": [
            { "$ref": "#/definitions/Literal" },
            { "$ref": "#/definitions/Identifier" }
          ]
        },
        "value": { "$ref": "#/definitions/Expression" },
        "kind": {
          "oneOf": [
            { "type": "string", "pattern": "^init$" },
            { "type": "string", "pattern": "^get$" },
            { "type": "string", "pattern": "^set$" }
          ]
        }
      },
      "required": [ "key", "value", "kind" ]
    },
    "UnaryOperator": {
      "type": "string",
      "enum": [ "-", "+", "!", "~", "typeof", "void", "delete" ]
    },
    "BinaryOperator": {
      "enum": [ 
        "==" , "!=" , "===" , "!==" , "<" , "<=" , ">" , ">=", "<<", ">>", 
        ">>>", "+" , "-" , "*" , "/" , "%" , "|" , "^" , "&" , "in", 
        "instanceof", ".."
      ]
    },
    "LogicalOperator": {
      "type": "string",
      "enum": [ "||", "&&" ]
    },
    "AssignmentOperator": {
      "type": "string",
      "enum": [
        "=", "+=", "-=", "*=", "/=", "%=", "<<=", ">>=", ">>>=", "|=", "^=", 
        "&="
      ]
    },
    "UpdateOperator": {
      "type": "string",
      "enum": [ "++", "--" ]
    }
  },
  "type": "object",
  "allOf": [
    { "$ref": "#/definitions/Program" }
  ]
}
